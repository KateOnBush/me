"use strict";(self.webpackChunkme=self.webpackChunkme||[]).push([[9480],{9480:(e,t,i)=>{i.d(t,{TwinkleUpdater:()=>l});var o=i(4409);class s{constructor(){this.enable=!1,this.frequency=.05,this.opacity=1}load(e){e&&(void 0!==e.color&&(this.color=o.Oi.create(this.color,e.color)),void 0!==e.enable&&(this.enable=e.enable),void 0!==e.frequency&&(this.frequency=e.frequency),void 0!==e.opacity&&(this.opacity=(0,o.DT)(e.opacity)))}}class n{constructor(){this.lines=new s,this.particles=new s}load(e){e&&(this.lines.load(e.lines),this.particles.load(e.particles))}}class l{getColorStyles(e,t,i,s){const n=e.options.twinkle;if(!n)return{};const l=n.particles,a=l.enable&&(0,o.G0)()<l.frequency,r=e.options.zIndex,c=(1-e.zIndexFactor)**r.opacityRate,d=a?(0,o.VG)(l.opacity)*c:s,p=(0,o.R5)(l.color),h=p?(0,o.LC)(p,d):void 0,u={},w=a&&h;return u.fill=w?h:void 0,u.stroke=w?h:void 0,u}async init(){await Promise.resolve()}isEnabled(e){const t=e.options.twinkle;return!!t&&t.particles.enable}loadOptions(e){e.twinkle||(e.twinkle=new n);for(var t=arguments.length,i=new Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];for(const s of i)e.twinkle.load(null===s||void 0===s?void 0:s.twinkle)}async update(){await Promise.resolve()}}}}]);
//# sourceMappingURL=9480.ca731584.chunk.js.map